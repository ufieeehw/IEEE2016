#!/usr/bin/python
'''Author: Khaled Hassan, Forrest Voight'''
from __future__ import division

# import roslib
# roslib.load_manifest('joystick_command')

import rospy

from sensor_msgs.msg import Joy
from geometry_msgs.msg import Twist, TwistStamped, Vector3
from std_msgs.msg import String, Int8, Bool
from ieee2016_msgs.srv import StopMecanum, StopController

import time

rospy.init_node('joystick_command')

pub = rospy.Publisher('/robot/twist', TwistStamped, queue_size=3)
start = rospy.Publisher('/settings/start_command', Bool, queue_size=3)
map_version = rospy.Publisher('/settings/map_version', Int8, queue_size=3)

stop_proxy = rospy.ServiceProxy('/robot/mecanum/stop', StopMecanum)

def got_joy_msg(joy_msg):
    global twist_stamped_msg, active

    if joy_msg.buttons[0]:
       active = not active

    if joy_msg.buttons[3]:
       map_version.publish(Int8(data=2))
       time.sleep(.2)
       start.publish(Bool(data=True))
    if joy_msg.buttons[1]:
       map_version.publish(Int8(data=1))
       time.sleep(.2)
       start.publish(Bool(data=True))

    #6 start, 7 stop
    if joy_msg.buttons[6]:
        stop_proxy(True)
    elif joy_msg.buttons[7]:
        stop_proxy(False)


    linear_x = joy_msg.axes[1] * max_linear_velocity
    linear_y = joy_msg.axes[0] * max_linear_velocity
    angular_z = joy_msg.axes[3] * max_angular_velocity
    seq = joy_msg.header.seq


    twist_stamped_msg.twist = Twist()
    twist_stamped_msg.twist.linear = Vector3()
    twist_stamped_msg.twist.angular = Vector3()

    speed = .25
    twist_stamped_msg.twist.linear.x = linear_x * speed
    twist_stamped_msg.twist.linear.y = linear_y * speed
    twist_stamped_msg.twist.linear.z = 0
    
    twist_stamped_msg.twist.angular.x = 0
    twist_stamped_msg.twist.angular.y = 0
    twist_stamped_msg.twist.angular.z = angular_z * speed

    twist_stamped_msg.header.seq = seq
    twist_stamped_msg.header.frame_id = '/robot'
    twist_stamped_msg.header.stamp = joy_msg.header.stamp


# These values are hardcoded for now.
max_linear_velocity = 1 # rospy.get_param('max_linear_velocity')
max_angular_velocity = 4 # rospy.get_param('max_angular_velocity')

twist_stamped_msg = TwistStamped()
active = False

rospy.Subscriber('/joy', Joy, got_joy_msg)

rate = rospy.Rate(25) #hz
while not rospy.is_shutdown():
    if active: pub.publish(twist_stamped_msg)
    rate.sleep()

rospy.spin()    

